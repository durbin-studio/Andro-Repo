{"repo":[ {"name": "Custom ActionView","permission": "No Permission Needed","dependency": "No Dependency Needed","codeSnipet": "<android.support.v7.widget.Toolbar    android:id=\"@+id/my_awesome_toolbar\"    android:gravity=\"bottom\"    android:layout_height=\"256dp\"    android:layout_width=\"match_parent\"    android:minHeight=\"?attr/actionBarSize\"    android:background=\"?attr/colorPrimary\">","minSdk": "No SDK Limitation","isXml": true,"searchKey": "ActionBar, Toolbar, Cutom View","isDepcrecated": false},{"name": "Send Email Programmatically","permission": "No Permission","dependency": "No Dependency","codeSnipet": "public static void sentEmail(Context mContext, String addresses, String subject, String body) {    try {        Intent sendIntentGmail = new Intent(Intent.ACTION_VIEW);        sendIntentGmail.setType(\"plain/text\");        sendIntentGmail.setData(Uri.parse(addresses));        sendIntentGmail.setClassName(\"com.google.android.gm\", \"com.google.android.gm.ComposeActivityGmail\");        sendIntentGmail.putExtra(Intent.EXTRA_EMAIL, addresses);        if (subject != null) sendIntentGmail.putExtra(Intent.EXTRA_SUBJECT, subject);        if (body != null) sendIntentGmail.putExtra(Intent.EXTRA_TEXT, body);        mContext.startActivity(sendIntentGmail);    } catch (Exception e) {        //When Gmail App is not installed or disable        Intent sendIntentIfGmailFail = new Intent(Intent.ACTION_SEND);        sendIntentIfGmailFail.setType(\"*/*\");        sendIntentIfGmailFail.putExtra(Intent.EXTRA_EMAIL, addresses);        sendIntentIfGmailFail.putExtra(Intent.EXTRA_SUBJECT, subject);        if (body != null) sendIntentIfGmailFail.putExtra(Intent.EXTRA_TEXT, body);        if (sendIntentIfGmailFail.resolveActivity(mContext.getPackageManager()) != null) {            mContext.startActivity(sendIntentIfGmailFail);        }    }}","minSdk": "No SDK Limitation","isXml": false,"searchKey": "Gmail, Email","isDepcrecated": false},{"name": "Cardview Dependency","permission": "No permission needed","dependency": "compile 'com.android.support:appcompat-v7:25.2.0'    compile 'com.android.support:cardview-v7:25.2.0'   compile 'com.android.support:design:25.3.1'","codeSnipet": "No code to Show","minSdk": "No SDK Limitation","isXml": true,"searchKey": "Dependency, Cardview","isDepcrecated": false},{"name": "Glide","permission": "    <uses-permission android:name=\"android.permission.INTERNET\" />","dependency": "compile 'com.github.bumptech.glide:glide:3.7.0'","codeSnipet": "Glide.with(context)                        .load(models.get(position).getBetterFeaturedImage().getMediaDetails().getSizes().getMedium().getSourceUrl())                        .placeholder(R.drawable.gollacut_placeholder)                        .error(R.drawable.gollachhut_banner)                        .into(holder.ivCover);","minSdk": "No SDK Limitation","isXml": false,"searchKey": "Image, Image Load, Image View, Library","isDepcrecated": false},{"name": "Volley","permission": "<uses-permission android:name=\"android.permission.INTERNET\" />","dependency": "compile fileTree(dir: 'libs', include: ['*.jar'])    compile 'com.android.support:appcompat-v7:22.2.0'    compile 'com.android.volley:volley:1.0.0'","codeSnipet": "sonObjectRequest jsonObjReq = new JsonObjectRequest(Method.GET,                url, null,                new Response.Listener<JSONObject>() {                     @Override                    public void onResponse(JSONObject response) {                        Log.d(TAG, response.toString());                        pDialog.hide();                    }                }, new Response.ErrorListener() {                     @Override                    public void onErrorResponse(VolleyError error) {                        VolleyLog.d(TAG, \"Error: \" + error.getMessage());                        // hide the progress dialog                        pDialog.hide();                    }                }); // Adding request to request queueAppController.getInstance().addToRequestQueue(jsonObjReq, tag_json_obj);    JsonArrayRequest req = new JsonArrayRequest(url,                new Response.Listener<JSONArray>() {                    @Override                    public void onResponse(JSONArray response) {                        Log.d(TAG, response.toString());                                pDialog.hide();                                 }                }, new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        VolleyLog.d(TAG, \"Error: \" + error.getMessage());                        pDialog.hide();                    }                }); // Adding request to request queueAppController.getInstance().addToRequestQueue(req, tag_json_arry);         StringRequest strReq = new StringRequest(Method.GET,                url, new Response.Listener<String>() {                     @Override                    public void onResponse(String response) {                        Log.d(TAG, response.toString());                        pDialog.hide();                     }                }, new Response.ErrorListener() {                     @Override                    public void onErrorResponse(VolleyError error) {                        VolleyLog.d(TAG, \"Error: \" + error.getMessage());                        pDialog.hide();                    }                }); // Adding request to request queueAppController.getInstance().addToRequestQueue(strReq, tag_string_req);                ","minSdk": "No SDK Limitation","isXml": false,"searchKey": "Volley, Android, Internet, API call","isDepcrecated": false},{"name": "Gson","permission": "<uses-permission android:name=\"android.permission.INTERNET\" />","dependency": "compile 'com.google.code.gson:gson:2.8.0'","codeSnipet": "public class ApiGetCall {    public void callApi(String url, final String TAG, final VolleyResponseListener listener){        StringRequest jsonObjReq = new StringRequest(Request.Method.GET,                url,  new Response.Listener<String>() {            @Override            public void onResponse(String response) {                ULog.e(TAG, response.toString());                listener.onResponse(response);            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                VolleyLog.d(TAG, \"Error: \" + error.getMessage());                ULog.e(TAG,error.getMessage().toString());                listener.onError(error);            }        });        // Adding request to request queue        App.getmInstance().addToRequestQueue(jsonObjReq, TAG);    }    public interface VolleyResponseListener{        public void onResponse(String response);        public void onError(VolleyError error);    }}","minSdk": "No SDK Limitation","isXml": false,"searchKey": "Gson, Dependency, Internet, JSON, parsing","isDepcrecated": false},{"name": "RecyclerView","permission": "No permission needed","dependency": "compile 'com.android.support:appcompat-v7:23.1.1'    compile 'com.android.support:design:23.1.1'    compile 'com.android.support:recyclerview-v7:23.1.1'","codeSnipet": "RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(getApplicationContext());        recyclerView.setLayoutManager(mLayoutManager);        recyclerView.setItemAnimator(new DefaultItemAnimator());        recyclerView.setAdapter(mAdapter);","minSdk": "No SDK Limitation","isXml": false,"searchKey": "recycler view, dependency, setup, code","isDepcrecated": false},{"name": "RecyclerView Adapter","permission": "No permission needed","dependency": "compile 'com.android.support:appcompat-v7:23.1.1'    compile 'com.android.support:design:23.1.1'    compile 'com.android.support:recyclerview-v7:23.1.1'","codeSnipet": "public class MoviesAdapter extends RecyclerView.Adapter<MoviesAdapter.MyViewHolder> {     private List<Movie> moviesList;     public class MyViewHolder extends RecyclerView.ViewHolder {        public TextView title, year, genre;         public MyViewHolder(View view) {            super(view);            title = (TextView) view.findViewById(R.id.title);            genre = (TextView) view.findViewById(R.id.genre);            year = (TextView) view.findViewById(R.id.year);        }    }      public MoviesAdapter(List<Movie> moviesList) {        this.moviesList = moviesList;    }     @Override    public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {        View itemView = LayoutInflater.from(parent.getContext())                .inflate(R.layout.movie_list_row, parent, false);         return new MyViewHolder(itemView);    }     @Override    public void onBindViewHolder(MyViewHolder holder, int position) {        Movie movie = moviesList.get(position);        holder.title.setText(movie.getTitle());        holder.genre.setText(movie.getGenre());        holder.year.setText(movie.getYear());    }     @Override    public int getItemCount() {        return moviesList.size();    }}","minSdk": "No SDK Limitation","isXml": false,"searchKey": "Adapter, Recyclerview, Code,View holder","isDepcrecated": false},{"name": "BottomNavigationView ","permission": "No permission needed","dependency": "compile ‘com.android.support:design:25.0.0’","codeSnipet": "<android.support.design.widget.BottomNavigationView
        android:id=\"@+id/bottom_navigation\"
        android:layout_width=\"match_parent\"
        android:layout_height=\"wrap_content\"
        android:layout_alignParentBottom=\"true\"
        app:itemBackground=\"@color/colorPrimary\"
        app:itemIconTint=\"@color/white\"
        app:itemTextColor=\"@color/white\"
        app:menu=\"@menu/bottom_navigation_main\" />","minSdk": "No SDK Limitation","isXml": true,"searchKey": "BottomNavigationView ","isDepcrecated": false},{"name": "BottomNavigationView","permission": "No permission needed","dependency": "compile ‘com.android.support:design:25.0.0’","codeSnipet": "BottomNavigationView bottomNavigationView = (BottomNavigationView)
                findViewById(R.id.bottom_navigation);
        
bottomNavigationView.setOnNavigationItemSelectedListener(
        new BottomNavigationView.OnNavigationItemSelectedListener() {
            @Override
            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                switch (item.getItemId()) {
                    case R.id.action_favorites:
                        
                    case R.id.action_schedules:
                   
                    case R.id.action_music:
                    
                }
                return true;
            }
        });","minSdk": "No SDK Limitation","isXml": false,"searchKey": "code","isDepcrecated": false},{"name": "Android Menu","permission": "No permission needed","dependency": "No dependency needed","codeSnipet": "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"
    xmlns:app=\"http://schemas.android.com/apk/res-auto\">
    <item
        android:id=\"@+id/action_favorites\"
        android:enabled=\"true\"
        android:icon=\"@drawable/ic_favorite_white_24dp\"
        android:title=\"@string/text_favorites\"
        app:showAsAction=\"ifRoom\" />
    <item
        android:id=\"@+id/action_schedules\"
        android:enabled=\"true\"
        android:icon=\"@drawable/ic_access_time_white_24dp\"
        android:title=\"@string/text_schedules\"
        app:showAsAction=\"ifRoom\" />
    <item
        android:id=\"@+id/action_music\"
        android:enabled=\"true\"
        android:icon=\"@drawable/ic_audiotrack_white_24dp\"
        android:title=\"@string/text_music\"
        app:showAsAction=\"ifRoom\" />
</menu>","minSdk": "No SDK Limitation","isXml": true,"searchKey": "menu resource","isDepcrecated": false}]}
